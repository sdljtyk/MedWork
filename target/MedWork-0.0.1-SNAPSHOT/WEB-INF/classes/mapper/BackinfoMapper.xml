<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tyk.mapper.BackinfoMapper">
  <resultMap id="BaseResultMap" type="com.tyk.pojo.Backinfo">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="BackID" jdbcType="INTEGER" property="backid" />
    <result column="OrderID" jdbcType="INTEGER" property="orderid" />
    <result column="MedID" jdbcType="INTEGER" property="medid" />
    <result column="BackNum" jdbcType="INTEGER" property="backnum" />
    <result column="BackSum" jdbcType="REAL" property="backsum" />
    <result column="BackState" jdbcType="INTEGER" property="backstate" />
    <result column="BackReason" jdbcType="VARCHAR" property="backreason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, BackID, OrderID, MedID, BackNum, BackSum, BackState, BackReason
  </sql>
  <select id="selectByExample" parameterType="com.tyk.pojo.BackinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from backinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from backinfo
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from backinfo
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tyk.pojo.BackinfoExample">
    delete from backinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tyk.pojo.Backinfo">
    insert into backinfo (ID, BackID, OrderID, 
      MedID, BackNum, BackSum, 
      BackState, BackReason)
    values (#{id,jdbcType=INTEGER}, #{backid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, 
      #{medid,jdbcType=INTEGER}, #{backnum,jdbcType=INTEGER}, #{backsum,jdbcType=REAL}, 
      #{backstate,jdbcType=INTEGER}, #{backreason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tyk.pojo.Backinfo">
    insert into backinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="backid != null">
        BackID,
      </if>
      <if test="orderid != null">
        OrderID,
      </if>
      <if test="medid != null">
        MedID,
      </if>
      <if test="backnum != null">
        BackNum,
      </if>
      <if test="backsum != null">
        BackSum,
      </if>
      <if test="backstate != null">
        BackState,
      </if>
      <if test="backreason != null">
        BackReason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="backid != null">
        #{backid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="medid != null">
        #{medid,jdbcType=INTEGER},
      </if>
      <if test="backnum != null">
        #{backnum,jdbcType=INTEGER},
      </if>
      <if test="backsum != null">
        #{backsum,jdbcType=REAL},
      </if>
      <if test="backstate != null">
        #{backstate,jdbcType=INTEGER},
      </if>
      <if test="backreason != null">
        #{backreason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tyk.pojo.BackinfoExample" resultType="java.lang.Long">
    select count(*) from backinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update backinfo
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.backid != null">
        BackID = #{record.backid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null">
        OrderID = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.medid != null">
        MedID = #{record.medid,jdbcType=INTEGER},
      </if>
      <if test="record.backnum != null">
        BackNum = #{record.backnum,jdbcType=INTEGER},
      </if>
      <if test="record.backsum != null">
        BackSum = #{record.backsum,jdbcType=REAL},
      </if>
      <if test="record.backstate != null">
        BackState = #{record.backstate,jdbcType=INTEGER},
      </if>
      <if test="record.backreason != null">
        BackReason = #{record.backreason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update backinfo
    set ID = #{record.id,jdbcType=INTEGER},
      BackID = #{record.backid,jdbcType=INTEGER},
      OrderID = #{record.orderid,jdbcType=INTEGER},
      MedID = #{record.medid,jdbcType=INTEGER},
      BackNum = #{record.backnum,jdbcType=INTEGER},
      BackSum = #{record.backsum,jdbcType=REAL},
      BackState = #{record.backstate,jdbcType=INTEGER},
      BackReason = #{record.backreason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tyk.pojo.Backinfo">
    update backinfo
    <set>
      <if test="backid != null">
        BackID = #{backid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        OrderID = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="medid != null">
        MedID = #{medid,jdbcType=INTEGER},
      </if>
      <if test="backnum != null">
        BackNum = #{backnum,jdbcType=INTEGER},
      </if>
      <if test="backsum != null">
        BackSum = #{backsum,jdbcType=REAL},
      </if>
      <if test="backstate != null">
        BackState = #{backstate,jdbcType=INTEGER},
      </if>
      <if test="backreason != null">
        BackReason = #{backreason,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tyk.pojo.Backinfo">
    update backinfo
    set BackID = #{backid,jdbcType=INTEGER},
      OrderID = #{orderid,jdbcType=INTEGER},
      MedID = #{medid,jdbcType=INTEGER},
      BackNum = #{backnum,jdbcType=INTEGER},
      BackSum = #{backsum,jdbcType=REAL},
      BackState = #{backstate,jdbcType=INTEGER},
      BackReason = #{backreason,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>